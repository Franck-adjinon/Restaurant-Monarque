"""
Django settings for monarqueproject project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
# import dans le cadre de la gestion des paramètres du package unfold
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rq7=&!5$!(&ip+xzuo2vjgffmhk65y9v_(#!7*7p^gxv+4q5ss'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Ajout des apps relatif à unfold
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",  # optional, if django-simple-history package is used
    # Fin d'ajout des apps relatif à unfold 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', 
    'monarque.apps.MonarqueConfig',
    'django_cleanup.apps.CleanupConfig',  #  Ajout de cette ligne pour inclure Django cleanup
    'import_export', # Ajout de cette ligne pour inclure Django import-export
    'simple_history', # Ajout de cette ligne pour inclure Django simple history
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware', # Django Simple history middleware
]

ROOT_URLCONF = 'monarqueproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'monarqueproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Ajoute le chemin du dossier static dans STATICFILES_DIRS
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "monarqueproject/static"),  # Chemin vers ton dossier static
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Gestion des fichiers médias
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



# Todo: Paramètres de unfold
UNFOLD = {
    "SITE_TITLE": "Gestion Restaurant Monarque",
    "SITE_HEADER": "MONARQUE",
    "SITE_ICON": {
        "light": lambda request: static("png/logo.png"),  # light mode
        "dark": lambda request: static("png/logo.png"),  # dark mode
    }, 
    "SITE_FAVICONS": [
        {
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/svg+xml+png",
            "href": lambda request: static("favicon/favicon.png"),
        },
    ], 
    "ENVIRONMENT": "monarque.utils.environment_callback", 
    "SIDEBAR": {
        "show_search": True,  # # Activer/Désactiver la barre de recherche
        "show_all_applications": False,  # Activer/Désactiver la liste déroulante des applications
        "navigation": [
            {
                "title": _("Navigation"),
                "separator": True,  # Ligne de séparation en haut
                "collapsible": True,  # Activer/Desactiver Empêche cette section d'être repliable
                "items": [
                    {
                        "title": _("Dashboard"),
                        "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:index"),
                        #"badge": "soutapp.utils.badge_callback",
                        "permission": lambda request: request.user.is_superuser,
                    },   
                    {
                        "title": _("Articles"),
                        "icon": "article",
                        "link": reverse_lazy("admin:monarque_article_changelist"), 
                    },
                    {
                        "title": _("Chefs"),
                        "icon": "person_apron",
                        "link": reverse_lazy("admin:monarque_chef_changelist"), 
                    },
                    {
                        "title": _("Nos Contacts"),
                        "icon": "call",
                        "link": reverse_lazy("admin:monarque_contact_company_changelist"), 
                    },
                    {
                        "title": _("Emails Clients"),
                        "icon": "mail",
                        "link": reverse_lazy("admin:monarque_email_send_changelist"), 
                    },
                    {
                        "title": _("Liens Sociale Chefs"),
                        "icon": "share",
                        "link": reverse_lazy("admin:monarque_liensociale_changelist"),
                        #"badge": "soutapp.utils.message_callback",
                    },
                    {
                        "title": _("Nos liens sociaux"),
                        "icon": "share",
                        "link": reverse_lazy("admin:monarque_liensociale_company_changelist"),
                    },
                    {
                        "title": _("Nos menus"),
                        "icon": "lunch_dining",
                        "link": reverse_lazy("admin:monarque_menu_changelist"), 
                    },
                    {
                        "title": _("Emails newsletter"),
                        "icon": "newspaper",
                        "link": reverse_lazy("admin:monarque_newsletter_email_changelist"), 
                    },
                    {
                        "title": _("Nos plats"),
                        "icon": "room_service",
                        "link": reverse_lazy("admin:monarque_plat_changelist"), 
                    },
                    {
                        "title": _("Agents service client"),
                        "icon": "support_agent",
                        "link": reverse_lazy("admin:monarque_service_client_changelist"), 
                    },
                    {
                        "title": _("Informations du restaurant"),
                        "icon": "list_alt",
                        "link": reverse_lazy("admin:monarque_studio_info_changelist"), 
                    },
                ], 
            }, 
            { 
                "title": _("Users & Groups"),
                "separator": True,  # Ligne de séparation en haut
                "collapsible": True,  # Activer/Desactiver Empêche cette section d'être repliable
                "items": [ 
                    {
                        "title": _("Users"),
                        "icon": "person",
                        "link": reverse_lazy("admin:auth_user_changelist"),
                    },
                    {
                        "title": _("Groups"),
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                    }, 
                ],
            }, 
        ],  
    },
}




# Todo: Paramètres de gestion des envois de mails via gmail 
# Charger les variables d'environnement
load_dotenv()

EMAIL_BACKEND = os.getenv('EMAIL_BACKEND', 'django.core.mail.backends.smtp.EmailBackend')
EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))  # Convertir en entier
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'  # Convertir en booléen
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')